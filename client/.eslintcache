[{"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\index.tsx":"1","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\reportWebVitals.js":"2","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\redux-store.ts":"3","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\App.tsx":"4","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\AuthPage.tsx":"5","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Starter_page\\StarterPage.tsx":"6","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-reducer.ts":"7","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-selectors.ts":"8","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\todo\\todo-reducer.ts":"9","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\api\\api.ts":"10","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\LogIn\\LogIn.tsx":"11","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\SignUp\\SignUp.tsx":"12"},{"size":677,"mtime":1612188833000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1612188833000,"results":"15","hashOfConfig":"14"},{"size":904,"mtime":1612198266037,"results":"16","hashOfConfig":"14"},{"size":835,"mtime":1612197080794,"results":"17","hashOfConfig":"14"},{"size":611,"mtime":1612202499992,"results":"18","hashOfConfig":"14"},{"size":108,"mtime":1612188833000,"results":"19","hashOfConfig":"14"},{"size":1990,"mtime":1612256369735,"results":"20","hashOfConfig":"14"},{"size":449,"mtime":1612198862545,"results":"21","hashOfConfig":"14"},{"size":3365,"mtime":1612199483558,"results":"22","hashOfConfig":"14"},{"size":1928,"mtime":1612256480514,"results":"23","hashOfConfig":"14"},{"size":1064,"mtime":1612203604161,"results":"24","hashOfConfig":"14"},{"size":2203,"mtime":1612256248461,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"131ep1s",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\index.tsx",[],["54","55"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\reportWebVitals.js",[],["56","57"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\redux-store.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\App.tsx",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\AuthPage.tsx",["58"],"import React, { useState } from \"react\";\nimport { InitialStateType } from \"../../redux/auth/auth-reducer\";\nimport { LogInPage } from \"./LogIn/LogIn\";\nimport { SignUpPage } from \"./SignUp/SignUp\";\n\n\nexport const AuthPage = () => {\n\n    let [isRegister, setRegister] = useState<'login' |'regist'>('regist')\n\n    \n    return (\n    <div className='container'> \n        <button onClick={() => setRegister('login')}>Log in</button>\n        <button onClick={() =>setRegister('regist')}>Sign up</button>\n        {(isRegister === 'login')\n        ? <LogInPage />\n        : <SignUpPage />\n        }\n    </div>\n    ); \n}\n\n","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Starter_page\\StarterPage.tsx",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-reducer.ts",["59"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-selectors.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\todo\\todo-reducer.ts",["60"],"import { todoAPI } from './../../api/api';\nimport { ListType, TaskType } from '../../api/api';\nimport { AppStateType, BasicThunkType, InferActionsType } from '../redux-store';\n// import { toDoAPI } from \"../api/api\";\n\nconst SET_LISTS = 'SET-LISTS';\nconst SET_TASKS = 'SET-TASKS';\nconst CREATE_LIST = 'CREATE-LIST';\nconst DELETE_LIST = 'DELETE-LIST';\nconst RENAME_LIST = 'RENAME-LIST';\nconst IS_FETCH = 'IS-FETCH';\n\nconst initialState = {\n    lists: [\n        {\n            \"_id\": \"9f27f97b-bc63-4114-9baa-c91facbd4ffb\",\n            \"title\": \"what todo\",\n            \"addedDate\": \"2019-07-30T12:24:15.063\",\n            \"order\": 0\n        }\n    ] as Array<ListType>,\n    tasks: [] as Array<TaskType>,\n    isFetching: false\n}\n\nconst toDoPage = (state = initialState, action: ActionsType): InitialStateType => {\n\n    switch (action.type) {\n        case SET_LISTS: {\n\n            return {\n                ...state,\n                lists: action.lists\n            }\n        }\n        case CREATE_LIST: {\n            return {\n                ...state,\n                lists: [action.list, ...state.lists]\n            }\n        }\n        case DELETE_LIST: {\n            return {\n                ...state,\n                lists: state.lists.filter(list => list._id !== action.todolistId)\n            }\n        }\n        case RENAME_LIST: {\n            return {\n                ...state,\n                lists: state.lists.map(list => { if (list._id === action.todolistId) { return { ...list, title: action.title } } else return list })\n            }\n        }\n        case IS_FETCH: {\n            return {\n                ...state,\n                isFetching: action.bool\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\nexport const actions = {\n    setLists: (lists: Array<ListType>) => ({ type: SET_LISTS, lists } as const),\n    setTasks: (tasks: Array<any>) => ({ type: SET_TASKS, tasks } as const),\n    createList: (list: any) => ({ type: CREATE_LIST, list } as const),\n    deleteList: (todolistId: string) => ({ type: DELETE_LIST, todolistId } as const),\n    renameTitle: (todolistId: string, title: string) => ({ type: RENAME_LIST, todolistId, title } as const),\n    isFetching: (bool: boolean) => ({ type: IS_FETCH, bool } as const),\n}\n\nexport const getLists = (): ThunkType => async dispatch => {\n    dispatch(actions.isFetching(true));\n    let response = await todoAPI.getToDoLists();\n    dispatch(actions.isFetching(false));\n    (response.length !== 0) && dispatch(actions.setLists(response));\n}\n\n// export const postList = (title) => async (dispatch) => {\n//     let response = await toDoAPI.postToDoLists(title);\n//     (response.resultCode === 0) && dispatch(createList(response.data.item));\n// }\n\n// export const deleteListThunk = (todolistId) => async (dispatch) => {\n//     let response = await toDoAPI.deleteToDoList(todolistId);\n//     (response.resultCode === 0) && dispatch(deleteList(todolistId));\n// }\n\n\n// export const renameTitleThunk = (todolistId, title) => async (dispatch) => {\n//     let response = await toDoAPI.renameToDoList(todolistId, title);\n//     (response.resultCode === 0) && dispatch(renameTitle(todolistId, title))\n// }\n\nexport default toDoPage;\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BasicThunkType<ActionsType>\n","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\api\\api.ts",["61"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\LogIn\\LogIn.tsx",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\SignUp\\SignUp.tsx",["62","63"],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":2,"column":10,"nodeType":"70","messageId":"71","endLine":2,"endColumn":26},{"ruleId":"68","severity":1,"message":"72","line":47,"column":13,"nodeType":"70","messageId":"71","endLine":47,"endColumn":21},{"ruleId":"68","severity":1,"message":"73","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":6,"column":16,"nodeType":"76","messageId":"77","endLine":6,"endColumn":52,"fix":"78"},{"ruleId":"68","severity":1,"message":"79","line":1,"column":18,"nodeType":"70","messageId":"71","endLine":1,"endColumn":30},{"ruleId":"68","severity":1,"message":"69","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":26},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'InitialStateType' is defined but never used.","Identifier","unusedVar","'response' is assigned a value but never used.","'AppStateType' is defined but never used.","no-useless-computed-key","Unnecessarily computed property ['Content-Type'] found.","Property","unnecessarilyComputedProperty",{"range":"82","text":"83"},"'FormikValues' is defined but never used.","no-global-assign","no-unsafe-negation",[146,162],"'Content-Type'"]
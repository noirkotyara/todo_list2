[{"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\index.tsx":"1","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\reportWebVitals.js":"2","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\redux-store.ts":"3","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\App.tsx":"4","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Starter_page\\StarterPage.tsx":"5","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-reducer.ts":"6","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-selectors.ts":"7","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\todo\\todo-reducer.ts":"8","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\api\\api.ts":"9","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\LogIn\\LogIn.tsx":"10","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\SignUp\\SignUp.tsx":"11","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Hooks\\message.ts":"12","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Header\\Header.tsx":"13"},{"size":677,"mtime":1612188833000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1612188833000,"results":"16","hashOfConfig":"15"},{"size":913,"mtime":1612300902599,"results":"17","hashOfConfig":"15"},{"size":1787,"mtime":1612298390376,"results":"18","hashOfConfig":"15"},{"size":108,"mtime":1612296471214,"results":"19","hashOfConfig":"15"},{"size":2421,"mtime":1612300923264,"results":"20","hashOfConfig":"15"},{"size":533,"mtime":1612300319130,"results":"21","hashOfConfig":"15"},{"size":3365,"mtime":1612199483558,"results":"22","hashOfConfig":"15"},{"size":2087,"mtime":1612295137740,"results":"23","hashOfConfig":"15"},{"size":1499,"mtime":1612300418244,"results":"24","hashOfConfig":"15"},{"size":2367,"mtime":1612300856175,"results":"25","hashOfConfig":"15"},{"size":252,"mtime":1612300269640,"results":"26","hashOfConfig":"15"},{"size":996,"mtime":1612298202278,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"131ep1s",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\index.tsx",[],["58","59"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\reportWebVitals.js",[],["60","61"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\redux-store.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\App.tsx",["62","63"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Starter_page\\StarterPage.tsx",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-reducer.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\auth\\auth-selectors.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\redux\\todo\\todo-reducer.ts",["64"],"import { todoAPI } from './../../api/api';\nimport { ListType, TaskType } from '../../api/api';\nimport { AppStateType, BasicThunkType, InferActionsType } from '../redux-store';\n// import { toDoAPI } from \"../api/api\";\n\nconst SET_LISTS = 'SET-LISTS';\nconst SET_TASKS = 'SET-TASKS';\nconst CREATE_LIST = 'CREATE-LIST';\nconst DELETE_LIST = 'DELETE-LIST';\nconst RENAME_LIST = 'RENAME-LIST';\nconst IS_FETCH = 'IS-FETCH';\n\nconst initialState = {\n    lists: [\n        {\n            \"_id\": \"9f27f97b-bc63-4114-9baa-c91facbd4ffb\",\n            \"title\": \"what todo\",\n            \"addedDate\": \"2019-07-30T12:24:15.063\",\n            \"order\": 0\n        }\n    ] as Array<ListType>,\n    tasks: [] as Array<TaskType>,\n    isFetching: false\n}\n\nconst toDoPage = (state = initialState, action: ActionsType): InitialStateType => {\n\n    switch (action.type) {\n        case SET_LISTS: {\n\n            return {\n                ...state,\n                lists: action.lists\n            }\n        }\n        case CREATE_LIST: {\n            return {\n                ...state,\n                lists: [action.list, ...state.lists]\n            }\n        }\n        case DELETE_LIST: {\n            return {\n                ...state,\n                lists: state.lists.filter(list => list._id !== action.todolistId)\n            }\n        }\n        case RENAME_LIST: {\n            return {\n                ...state,\n                lists: state.lists.map(list => { if (list._id === action.todolistId) { return { ...list, title: action.title } } else return list })\n            }\n        }\n        case IS_FETCH: {\n            return {\n                ...state,\n                isFetching: action.bool\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\nexport const actions = {\n    setLists: (lists: Array<ListType>) => ({ type: SET_LISTS, lists } as const),\n    setTasks: (tasks: Array<any>) => ({ type: SET_TASKS, tasks } as const),\n    createList: (list: any) => ({ type: CREATE_LIST, list } as const),\n    deleteList: (todolistId: string) => ({ type: DELETE_LIST, todolistId } as const),\n    renameTitle: (todolistId: string, title: string) => ({ type: RENAME_LIST, todolistId, title } as const),\n    isFetching: (bool: boolean) => ({ type: IS_FETCH, bool } as const),\n}\n\nexport const getLists = (): ThunkType => async dispatch => {\n    dispatch(actions.isFetching(true));\n    let response = await todoAPI.getToDoLists();\n    dispatch(actions.isFetching(false));\n    (response.length !== 0) && dispatch(actions.setLists(response));\n}\n\n// export const postList = (title) => async (dispatch) => {\n//     let response = await toDoAPI.postToDoLists(title);\n//     (response.resultCode === 0) && dispatch(createList(response.data.item));\n// }\n\n// export const deleteListThunk = (todolistId) => async (dispatch) => {\n//     let response = await toDoAPI.deleteToDoList(todolistId);\n//     (response.resultCode === 0) && dispatch(deleteList(todolistId));\n// }\n\n\n// export const renameTitleThunk = (todolistId, title) => async (dispatch) => {\n//     let response = await toDoAPI.renameToDoList(todolistId, title);\n//     (response.resultCode === 0) && dispatch(renameTitle(todolistId, title))\n// }\n\nexport default toDoPage;\n\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsType<typeof actions>\ntype ThunkType = BasicThunkType<ActionsType>\n","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\api\\api.ts",["65"],"import { LogInValuesType } from './../components/Auth/LogIn/LogIn';\n  \nimport axios from 'axios'\nimport { SignUpValuesType } from '../components/Auth/SignUp/SignUp';\n\nconst instance = axios.create({\n    headers: { ['Content-Type']: 'application/json'}\n});\n\n\n\nexport const authAPI = {\n    logIn(user: LogInValuesType){  \n        return instance.post(`/api/auth/login`,user)\n        .then(response => response.data)\n    },\n    signUp(user: SignUpValuesType){\n        return instance.post(`/api/auth/register`,user)\n        .then(response => response.data)\n    }\n} \nexport const todoAPI = {\n    getToDoLists(){\n        return instance.get(`/todo-lists`)\n            .then(response => response.data)\n    },\n    // postToDoLists(title){\n    //     return instance.post(`/todo-lists`, {title})\n    //         .then(response => response.data);\n    //         //resultCode messages[]\n    //         // data -> item:{id title addedDate order}\n    // },\n    // renameToDoList(todolistId, title){\n    //     return instance.put(`/todo-lists/${todolistId}`, {title})\n    //         .then(response => response.data);\n    //         //check response\n    // },\n    // deleteToDoList(todolistId){\n    //     return instance.delete(`/todo-lists/${todolistId}`)\n    //         .then(response => response.data);\n    //         //resultCode messages[] data{}\n    // },\n    // reorderToDoList(todolistId: , putAfterItemId){\n    //     //putAfterItemId: 'string'\n    //     return instance.put(`/todo-lists/${todolistId}/reorder`, {putAfterItemId: putAfterItemId})\n    //         .then(response => response.data);\n    //         //resultCode messages[] data{}\n    // }\n}\nexport type UserType = {\n    firstName: null | string,\n    lastName: null | string,\n    token: null | string,\n    userId: null | string\n}\nexport type ListType = {\n   _id: string,\n   title: string,\n   addedDate: string,\n   order: number \n}\nexport type TaskType = {\n    description: string,\n    title: string,\n    priority: number,\n    completed: boolean,\n    startDate: string,\n    deadline: string,\n    order: number,\n    listId: string\n}","E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\LogIn\\LogIn.tsx",["66"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Auth\\SignUp\\SignUp.tsx",["67","68"],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Hooks\\message.ts",[],"E:\\WebP\\React+Node\\Todo_list2\\client\\src\\components\\Common\\Header\\Header.tsx",["69"],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":31,"column":6,"nodeType":"76","endLine":31,"endColumn":8,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":40,"column":6,"nodeType":"76","endLine":40,"endColumn":20,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":3,"column":10,"nodeType":"82","messageId":"83","endLine":3,"endColumn":22},{"ruleId":"84","severity":1,"message":"85","line":7,"column":16,"nodeType":"86","messageId":"87","endLine":7,"endColumn":52,"fix":"88"},{"ruleId":"74","severity":1,"message":"89","line":17,"column":6,"nodeType":"76","endLine":17,"endColumn":14,"suggestions":"90"},{"ruleId":"74","severity":1,"message":"89","line":21,"column":6,"nodeType":"76","endLine":21,"endColumn":14,"suggestions":"91"},{"ruleId":"80","severity":1,"message":"92","line":27,"column":9,"nodeType":"82","messageId":"83","endLine":27,"endColumn":17},{"ruleId":"93","severity":1,"message":"94","line":18,"column":11,"nodeType":"95","endLine":18,"endColumn":46},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["98"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["99"],"@typescript-eslint/no-unused-vars","'AppStateType' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property ['Content-Type'] found.","Property","unnecessarilyComputedProperty",{"range":"100","text":"101"},"React Hook useEffect has missing dependencies: 'dispatch' and 'errorWrap'. Either include them or remove the dependency array.",["102"],["103"],"'response' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},[214,230],"'Content-Type'",{"desc":"108","fix":"109"},{"desc":"108","fix":"110"},"Update the dependencies array to be: [dispatch]",{"range":"111","text":"112"},"Update the dependencies array to be: [isAuthorized, user]",{"range":"113","text":"114"},"Update the dependencies array to be: [dispatch, errorWrap, errors]",{"range":"115","text":"116"},{"range":"117","text":"116"},[1069,1071],"[dispatch]",[1254,1268],"[isAuthorized, user]",[566,574],"[dispatch, errorWrap, errors]",[687,695]]